Successful nets:
Search strategy: RL_Search
Performance Predictor: Low_Fidelity
0
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (ReLu0): ReLU()
  (Cons1): Conv2d(16, 24, kernel_size=(3, 3), stride=(1, 1))
  (ReLu1): ReLU()
  (Cons2): Conv2d(24, 16, kernel_size=(5, 5), stride=(1, 1))
  (ReLu2): ReLU()
  (postprocess): Lambda()
  (FC): Linear(in_features=7744, out_features=10, bias=True)
)
tensor(0.1135)
1
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (ReLu0): ReLU()
  (Cons1): Conv2d(36, 24, kernel_size=(1, 1), stride=(3, 3))
  (ReLu1): ReLU()
  (Cons2): Conv2d(24, 36, kernel_size=(3, 3), stride=(1, 1))
  (ReLu2): ReLU()
  (postprocess): Lambda()
  (FC): Linear(in_features=2304, out_features=10, bias=True)
)
tensor(0.8585)
2
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (ReLu0): ReLU()
  (Avg_Pool1): AvgPool2d(kernel_size=3, stride=1, padding=0)
  (Cons2): Conv2d(16, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (ReLu2): ReLU()
  (postprocess): Lambda()
  (FC): Linear(in_features=7744, out_features=10, bias=True)
)
tensor(0.0980)
3
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 36, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (ReLu0): ReLU()
  (Cons1): Conv2d(36, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (ReLu1): ReLU()
  (Cons2): Conv2d(24, 36, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (ReLu2): ReLU()
  (postprocess): Lambda()
  (FC): Linear(in_features=20736, out_features=10, bias=True)
)
tensor(0.1135)
4
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(1, 1), stride=(3, 3))
  (ReLu0): ReLU()
  (Cons1): Conv2d(24, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (ReLu1): ReLU()
  (Cons2): Conv2d(16, 24, kernel_size=(5, 5), stride=(3, 3))
  (ReLu2): ReLU()
  (postprocess): Lambda()
  (FC): Linear(in_features=96, out_features=10, bias=True)
)
tensor(0.7033)
5
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1))
  (ReLu0): ReLU()
  (Cons1): Conv2d(16, 16, kernel_size=(5, 5), stride=(3, 3))
  (ReLu1): ReLU()
  (Cons2): Conv2d(16, 24, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (ReLu2): ReLU()
  (postprocess): Lambda()
  (FC): Linear(in_features=864, out_features=10, bias=True)
)
tensor(0.8702)
6
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1))
  (ReLu0): ReLU()
  (Cons1): Conv2d(16, 24, kernel_size=(3, 3), stride=(1, 1))
  (ReLu1): ReLU()
  (Avg_Pool2): AvgPool2d(kernel_size=3, stride=1, padding=1)
  (postprocess): Lambda()
  (FC): Linear(in_features=13824, out_features=10, bias=True)
)
tensor(0.1032)
7
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(1, 1), stride=(1, 1))
  (ReLu0): ReLU()
  (Max_Pool1): MaxPool2d(kernel_size=5, stride=1, padding=1, dilation=1, ceil_mode=False)
  (Max_Pool2): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
  (postprocess): Lambda()
  (FC): Linear(in_features=16224, out_features=10, bias=True)
)
tensor(0.1028)
8
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (ReLu0): ReLU()
  (Cons1): Conv2d(24, 24, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (ReLu1): ReLU()
  (Max_Pool2): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
  (postprocess): Lambda()
  (FC): Linear(in_features=13824, out_features=10, bias=True)
)
tensor(0.6979)
9
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (ReLu0): ReLU()
  (Max_Pool1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
  (Max_Pool2): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
  (postprocess): Lambda()
  (FC): Linear(in_features=16224, out_features=10, bias=True)
)
tensor(0.7698)
10
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (ReLu0): ReLU()
  (Cons1): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (ReLu1): ReLU()
  (Max_Pool2): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
  (postprocess): Lambda()
  (FC): Linear(in_features=18816, out_features=10, bias=True)
)
tensor(0.8735)
11
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(3, 3), stride=(3, 3), padding=(1, 1))
  (ReLu0): ReLU()
  (Max_Pool1): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
  (Cons2): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (ReLu2): ReLU()
  (postprocess): Lambda()
  (FC): Linear(in_features=384, out_features=10, bias=True)
)
tensor(0.6323)
12
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(3, 3), stride=(3, 3), padding=(1, 1))
  (ReLu0): ReLU()
  (Max_Pool1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
  (Max_Pool2): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
  (postprocess): Lambda()
  (FC): Linear(in_features=384, out_features=10, bias=True)
)
tensor(0.7120)
13
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(3, 3), stride=(3, 3), padding=(1, 1))
  (ReLu0): ReLU()
  (Max_Pool1): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
  (Max_Pool2): MaxPool2d(kernel_size=5, stride=1, padding=1, dilation=1, ceil_mode=False)
  (postprocess): Lambda()
  (FC): Linear(in_features=96, out_features=10, bias=True)
)
tensor(0.2505)
14
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (ReLu0): ReLU()
  (Max_Pool1): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
  (Avg_Pool2): AvgPool2d(kernel_size=3, stride=1, padding=1)
  (postprocess): Lambda()
  (FC): Linear(in_features=2400, out_features=10, bias=True)
)
tensor(0.8759)
15
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(3, 3), stride=(3, 3), padding=(1, 1))
  (ReLu0): ReLU()
  (Max_Pool1): MaxPool2d(kernel_size=1, stride=1, padding=0, dilation=1, ceil_mode=False)
  (Max_Pool2): MaxPool2d(kernel_size=5, stride=1, padding=1, dilation=1, ceil_mode=False)
  (postprocess): Lambda()
  (FC): Linear(in_features=1536, out_features=10, bias=True)
)
tensor(0.6845)
16
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (ReLu0): ReLU()
  (Max_Pool1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
  (Max_Pool2): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
  (postprocess): Lambda()
  (FC): Linear(in_features=18816, out_features=10, bias=True)
)
tensor(0.1032)
17
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (ReLu0): ReLU()
  (Cons1): Conv2d(24, 16, kernel_size=(3, 3), stride=(3, 3), padding=(1, 1))
  (ReLu1): ReLU()
  (Cons2): Conv2d(16, 24, kernel_size=(3, 3), stride=(1, 1))
  (ReLu2): ReLU()
  (postprocess): Lambda()
  (FC): Linear(in_features=1536, out_features=10, bias=True)
)
tensor(0.8714)
18
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(3, 3), stride=(3, 3), padding=(1, 1))
  (ReLu0): ReLU()
  (Max_Pool1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
  (Max_Pool2): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
  (postprocess): Lambda()
  (FC): Linear(in_features=384, out_features=10, bias=True)
)
tensor(0.6559)
19
Sequential(
  (preprocess): Lambda()
  (Cons0): Conv2d(1, 24, kernel_size=(3, 3), stride=(3, 3), padding=(1, 1))
  (ReLu0): ReLU()
  (Max_Pool1): MaxPool2d(kernel_size=3, stride=3, padding=1, dilation=1, ceil_mode=False)
  (Max_Pool2): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
  (postprocess): Lambda()
  (FC): Linear(in_features=384, out_features=10, bias=True)
)
tensor(0.6099)
